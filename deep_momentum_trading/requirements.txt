# Deep Momentum Trading System - Python Requirements
# Production-ready dependencies based on actual codebase imports

# ==============================================================================
# Core Python Environment
# ==============================================================================
python-dotenv>=1.0.0

# ==============================================================================
# Machine Learning & Deep Learning
# ==============================================================================
torch>=2.0.0
numpy>=1.24.0,<2.0.0
scipy>=1.10.0
scikit-learn>=1.3.0

# High-performance numerical computing
numba>=0.57.0

# ==============================================================================
# Data Processing & Analysis
# ==============================================================================
pandas>=2.0.0,<3.0.0

# Data validation and schema enforcement
pydantic>=2.0.0

# ==============================================================================
# Trading & Market Data APIs
# ==============================================================================
# Alpaca Trading API
alpaca-py>=0.8.0

# Polygon.io API client
polygon-api-client>=1.12.0

# HTTP clients for API communication
httpx>=0.24.0
requests>=2.31.0

# ==============================================================================
# Async Programming & Concurrency
# ==============================================================================
# Async HTTP client
aiohttp>=3.8.0

# Async file operations
aiofiles>=23.0.0

# Async utilities
asyncio-mqtt>=0.16.0

# ==============================================================================
# Data Storage & Persistence
# ==============================================================================
# HDF5 for time series storage
h5py>=3.9.0

# Parquet file format
pyarrow>=12.0.0

# SQLite extensions
sqlite-utils>=3.34.0

# ==============================================================================
# Communication & Messaging
# ==============================================================================
# ZeroMQ for inter-process communication
pyzmq>=25.1.0

# Message compression
lz4>=4.3.2

# WebSockets for real-time data
websockets>=11.0.3

# Message serialization
msgpack>=1.0.5

# ==============================================================================
# Configuration Management
# ==============================================================================
PyYAML>=6.0.1

# Advanced configuration management
hydra-core>=1.3.0

# ==============================================================================
# System Resources & Performance Monitoring
# ==============================================================================
psutil>=5.9.5

# GPU monitoring (NVIDIA)
nvidia-ml-py>=12.535.0

# Memory profiling
memory-profiler>=0.61.0

# ==============================================================================
# Time & Date Handling
# ==============================================================================
python-dateutil>=2.8.2

# Timezone handling
pytz>=2023.3

# ==============================================================================
# Logging & Monitoring
# ==============================================================================
# Structured logging
structlog>=23.1.0

# Log rotation
loguru>=0.7.0

# Metrics collection
prometheus-client>=0.17.0

# ==============================================================================
# Data Visualization & Dashboards
# ==============================================================================
# Plotting and visualization
matplotlib>=3.7.0
plotly>=5.15.0

# Dashboard framework
dash>=2.11.0
dash-bootstrap-components>=1.4.0

# ==============================================================================
# Financial Data & Analysis
# ==============================================================================
# Technical analysis indicators
TA-Lib>=0.4.25

# Financial data utilities - REMOVED yfinance (using Polygon API only)
# yfinance>=0.2.18  # Removed - using Polygon API exclusively

# Quantitative finance
quantlib>=1.31

# ==============================================================================
# Testing & Quality Assurance
# ==============================================================================
# Testing framework (optional - uncomment for development)
# pytest>=7.4.0
# pytest-asyncio>=0.21.0
# pytest-benchmark>=4.0.0
# pytest-cov>=4.1.0
# pytest-mock>=3.11.0

# Code formatting and linting (optional - uncomment for development)
# black>=23.7.0
# isort>=5.12.0
# flake8>=6.0.0
# mypy>=1.5.0

# ==============================================================================
# Security & Authentication
# ==============================================================================
# Cryptographic operations
cryptography>=41.0.0

# JWT token handling
PyJWT>=2.8.0

# ==============================================================================
# Utilities & Helpers
# ==============================================================================
# Progress bars
tqdm>=4.65.0

# Rich text and formatting
rich>=13.4.0

# Click for CLI applications
click>=8.1.0

# Retry mechanisms
tenacity>=8.2.0

# JSON schema validation
jsonschema>=4.18.0

# ==============================================================================
# ARM64/GH200 Specific Optimizations
# ==============================================================================
# ARM64 optimized BLAS (install separately if needed)
# openblas>=0.3.23  # For ARM64 systems

# ==============================================================================
# Optional GPU Acceleration
# ==============================================================================
# CUDA toolkit integration (install separately)
# nvidia-cuda-runtime-cu12>=12.0.0
# nvidia-cublas-cu12>=12.0.0
# nvidia-cufft-cu12>=11.0.0

# ==============================================================================
# Installation Notes
# ==============================================================================
# 
# For development environment:
# pip install -e .[dev]
# 
# For GPU acceleration:
# pip install -e .[gpu]
# 
# For ARM64 systems:
# pip install -e .[arm64]
# 
# For complete installation:
# pip install -e .[all]
# 
# ARM64/GH200 Specific Notes:
# - Ensure PyTorch is compiled with ARM64 optimizations
# - Install ARM64-optimized BLAS libraries for maximum performance
# - Configure CUDA for GH200 Grace Hopper if available
# 
# Installation:
# pip install -r requirements.txt
#
# For production deployment:
# pip install --no-deps -r requirements.txt
#
# Docker installation:
# FROM python:3.11-slim
# COPY requirements.txt .
# RUN pip install --no-cache-dir -r requirements.txt
#
